{"version":3,"sources":["utils.js","Mode.model.js","Categories.model.js","Header.js","Posts.model.js","Posts.js","Editor.js","Setup.js","App.js","serviceWorker.js","index.js"],"names":["Object","isEmptyObject","obj","keys","length","constructor","String","prototype","capitalize","this","charAt","toUpperCase","slice","Date","getWeek","weekStart","januaryFirst","getFullYear","undefined","Error","Math","floor","getDay","Promise","delay","ms","resolve","setTimeout","ModelContext","React","createContext","CategoriesContext","categorySorting","a","b","descA","description","posA","position","descB","posB","Header","setMode","useContext","ModeContext","categories","selectedCategory","setSelectedCategory","className","process","onClick","map","category","i","key","handleCategoryClick","PostsContext","usePosts","useState","posts","setPosts","selectedPost","setSelectedPost","putPost","refreshedPost","entries","forEach","params","TableName","Item","console","log","window","dynamoDB","documentClient","put","promise","useEffect","id","categoryId","query","KeyConditionExpression","ExpressionAttributeValues","ScanIndexForward","fetchPosts","then","Items","patchPost","indexToReplace","findIndex","post","timestamp","splice","postPost","unshift","markdown","markdownIt","PostLineItem","selected","subtitle","title","style","WebkitLineClamp","display","WebkitBoxOrient","Post","source","dangerouslySetInnerHTML","__html","render","Posts","useFormInput","entry","value","setValue","onChange","e","target","placeholder","Editor","data","editorMode","setEditorMode","JSON","parse","stringify","toISOString","toLowerCase","split","categoryValue","categoryOnChange","event","beforeunloadHandler","message","returnValue","addEventListener","removeEventListener","onSubmit","preventDefault","savePromise","newPost","alert","xmlns","viewBox","d","type","useFormInputLocalstorage","options","localStorage","getItem","def","newValue","setItem","name","allowEmpty","Setup","awsAccessKey","awsSecretAccess","fields","values","isComplete","filter","field","every","res","complete","AWS","config","update","region","credentials","Credentials","DynamoDB","DocumentClient","endpoint","REACT_APP_DYNAMODB_ENDPOINT","maxRetries","AppContext","props","categoriesContextValue","setCategories","scan","sort","useCategories","postsContextValue","Provider","children","Viewport","mode","DevelopmentIndicator","App","modeContextValue","modes","setModeInternal","setData","newMode","newData","indexOf","useMode","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a9ceb1d9.chunk.js","sourcesContent":["/* eslint-disable no-extend-native */\n\nObject.isEmptyObject = function objectIsEmptyObject(obj) {\n  return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\n\nString.prototype.capitalize = function prototypeCapitalize() {\n  if (this.length > 1) return this.charAt(0).toUpperCase() + this.slice(1);\n  else if (this.length === 1) return this.charAt(0).toUpperCase();\n  else return this;\n};\n\nDate.prototype.getWeek = function prototypeGetWeek(weekStart) {\n  var januaryFirst = new Date(this.getFullYear(), 0, 1);\n  if (\n    weekStart !== undefined &&\n    (typeof weekStart !== 'number' ||\n      weekStart % 1 !== 0 ||\n      weekStart < 0 ||\n      weekStart > 6)\n  ) {\n    throw new Error('Wrong argument. Must be an integer between 0 and 6.');\n  }\n  weekStart = weekStart || 0;\n  return Math.floor(\n    ((this - januaryFirst) / 86400000 + januaryFirst.getDay() - weekStart) / 7\n  );\n};\n\nPromise.delay = function prototypeDelay(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import React, { useState } from 'react';\n\nconst ModelContext = React.createContext({});\n\nexport function useMode() {\n  const modes = ['setup', 'view', 'edit'];\n  const [mode, setModeInternal] = useState(modes[0]);\n  const [data, setData] = useState();\n\n  function setMode(newMode, newData) {\n    console.log('Setting mode', { newMode, newData });\n    if (modes.indexOf(newMode) === -1) {\n      throw new Error(`Unknow ${mode}`);\n    }\n    setData(newData);\n    setModeInternal(newMode);\n  }\n\n  return {\n    mode,\n    setMode,\n    data,\n  };\n}\n\nexport default ModelContext;\n","import React, { useState, useEffect } from 'react';\nimport './utils';\n\nconst CategoriesContext = React.createContext({});\n\nexport default CategoriesContext;\n\nexport function useCategories() {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState({});\n  useEffect(() => {\n    console.log('Fetch categories');\n    window.dynamoDB.documentClient\n      .scan({\n        TableName: 'journal-categories',\n      })\n      .promise()\n      .then(({ Items }) => {\n        Items.sort(categorySorting);\n\n        setCategories(Items);\n        if (Object.isEmptyObject(selectedCategory)) {\n          setSelectedCategory(Items[0]);\n        }\n      });\n    // eslint-disable-next-line\n  }, []);\n  return {\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n  };\n}\n\nfunction categorySorting(a, b) {\n  // Declaration\n  const { description: descA, position: posA } = a;\n  const { description: descB, position: posB } = b;\n\n  // Give priority of order to elements that contain position\n  if (posA !== undefined && posB !== undefined) return posA - posB;\n  if (typeof posA === 'number') return -1;\n  if (typeof posB === 'number') return 1;\n\n  // Else, order by description\n  if (descA > descB) return 1;\n\n  if (descB > descA) return -1;\n\n  return 0;\n}\n","import React, { useContext } from 'react';\nimport ModeContext from './Mode.model';\nimport CategoriesContext from './Categories.model';\n\nfunction Header() {\n  const { setMode } = useContext(ModeContext);\n  const { categories, selectedCategory, setSelectedCategory } = useContext(\n    CategoriesContext\n  );\n\n  function handleCategoryClick(category) {\n    setSelectedCategory(category);\n  }\n\n  return (\n    <header className=\"bg-blue-600 text-white\">\n      <div className=\"max-w-6xl m-auto\">\n        <div className=\"px-3 border-primary flex items-center justify-between\">\n          <div className=\"py-2 flex items-end\">\n            <h1 className=\"days-one text-2xl text-primary px-2\">Journal</h1>\n            <small className=\"block pb-1\">\n              {process.env.REACT_APP_VERSION}\n            </small>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              onClick={() => setMode('edit')}\n              className=\"block border rounded-lg text-sm px-2 py-1 mr-2 text-blue-600 bg-white\"\n            >\n              Compose\n            </button>\n          </div>\n        </div>\n        <div className=\"flex flex-wrap justify-around\">\n          {categories.map((category, i) => {\n            return (\n              <button\n                key={i}\n                onClick={() => handleCategoryClick(category)}\n                className={`focus:outline-none p-3 block flex-initial capitalize text-sm ${\n                  category === selectedCategory ? 'font-extrabold' : ''\n                }`}\n              >\n                {category.description}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\n\nconst PostsContext = React.createContext({});\n\nexport default PostsContext;\n\nfunction fetchPosts(categoryId) {\n  console.log('Fetching posts', categoryId);\n  return window.dynamoDB.documentClient\n    .query({\n      TableName: 'journal-posts',\n      KeyConditionExpression: 'category = :category',\n      ExpressionAttributeValues: {\n        ':category': categoryId,\n      },\n      ScanIndexForward: false,\n    })\n    .promise();\n}\n\nexport function usePosts({ selectedCategory }) {\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState({});\n\n  useEffect(() => {\n    // debugger;\n    if (selectedCategory && selectedCategory.id) {\n      const categoryId = selectedCategory.id;\n      fetchPosts(categoryId).then(({ Items }) => {\n        setPosts(Items);\n        setSelectedPost(Items[0]);\n      });\n    }\n  }, [selectedCategory]);\n\n  function putPost(refreshedPost) {\n    Object.entries(refreshedPost).forEach(([key, value]) => {\n      if (value === '') delete refreshedPost[key];\n    });\n\n    const params = {\n      TableName: 'journal-posts',\n      Item: refreshedPost,\n    };\n\n    console.log('Saving', params);\n    return window.dynamoDB.documentClient.put(params).promise();\n  }\n\n  function patchPost(refreshedPost) {\n    const indexToReplace = posts.findIndex(\n      (post) => post.timestamp === refreshedPost.timestamp\n    );\n    return putPost(refreshedPost).then(() => {\n      posts.splice(indexToReplace, 1, refreshedPost);\n      setPosts(posts);\n      setSelectedPost(posts[indexToReplace]);\n    });\n  }\n\n  function postPost(refreshedPost) {\n    return putPost(refreshedPost).then(() => {\n      posts.unshift(refreshedPost);\n      setPosts(posts);\n      setSelectedPost(posts[0]);\n    });\n  }\n\n  return {\n    posts,\n    selectedPost,\n    setSelectedPost,\n    patchPost,\n    postPost,\n  };\n}\n","import React, { useContext } from 'react';\nimport markdownIt from 'markdown-it';\nimport ModeContext from './Mode.model';\n// import CategoriesContext from './Categories.model';\nimport PostsContext from './Posts.model';\n\nconst markdown = markdownIt();\n\nfunction markdownGenerator(source) {\n  return {\n    __html: markdown.render(source || ''),\n  };\n}\n\nfunction PostLineItem({ post, selected }) {\n  // const { selectedCategory } = useContext(CategoriesContext);\n  const { selectedPost, setSelectedPost } = useContext(PostsContext);\n  const markdownStyle = {\n    WebkitLineClamp: 2,\n    display: '-webkit-box',\n    WebkitBoxOrient: 'vertical',\n  };\n  return (\n    <div\n      className={`p-4 border-b-2 last:border-b-0 ${\n        post === selectedPost ? 'bg-grayext-eee' : ''\n      }`}\n      onClick={() => setSelectedPost(post)}\n    >\n      <h5 className=\"uppercase text-sm text-grayext-nine font-medium leading-3 font-sans block\">\n        {post.subtitle}\n      </h5>\n      <h4 className=\"capitalize text-base font-bold leading-7 pb-1\">\n        {post.title}\n      </h4>\n      <p\n        className=\"overflow-hidden text-xs text-grayext-three leading-4\"\n        style={markdownStyle}\n      >\n        {post.markdown}\n      </p>\n    </div>\n  );\n}\n\nfunction Post({ post }) {\n  const { setMode } = useContext(ModeContext);\n  return (\n    <div>\n      <div\n        className=\"px-8 py-4 border-b-2 border-t-2 border-blue-200 bg-blue-100 cursor-pointer\"\n        onClick={() => setMode('edit', { post })}\n      >\n        <h1 className=\"text-2xl uppercase font-medium text-blue-900\">\n          {post.title}\n        </h1>\n        <h2 className=\"block text-xl capitalize font-normal leading-5 text-blue-300\">\n          {post.subtitle}\n        </h2>\n      </div>\n      <div\n        className=\"basic-post p-8\"\n        dangerouslySetInnerHTML={markdownGenerator(post.markdown)}\n      ></div>\n    </div>\n  );\n}\n\nfunction Posts() {\n  const { selectedPost, posts } = useContext(PostsContext);\n  return (\n    <div className=\"text-grayext-three m-auto xl:flex\">\n      <div className=\"xl:max-w-md border-t-2 border-t-blue-200 border-r-2 border-r-gray-200 max-h-80 xl:max-h-full overflow-y-auto\">\n        {posts.map((post, i) => {\n          return <PostLineItem post={post} key={i}></PostLineItem>;\n        })}\n      </div>\n      <div className=\"xl:flex-grow\">\n        <Post post={selectedPost || {}}></Post>\n      </div>\n    </div>\n  );\n}\n\nexport default Posts;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ModeContext from './Mode.model';\nimport CategoriesContext from './Categories.model';\nimport PostsContext from './Posts.model';\n\nfunction Editor() {\n  const { setMode, data } = useContext(ModeContext);\n  const { patchPost, postPost } = useContext(PostsContext);\n  const [editorMode, setEditorMode] = useState('edit');\n\n  const { categories, selectedCategory } = useContext(CategoriesContext);\n\n  let post;\n  if (data && data.post) {\n    post = JSON.parse(JSON.stringify(data.post));\n  } else {\n    post = {\n      timestamp: new Date().toISOString(),\n      category: selectedCategory.id,\n    };\n    if (selectedCategory.description.toLowerCase() === 'daily') {\n      post.subtitle = new Date().toISOString().split('T')[0];\n    }\n    if (selectedCategory.description.toLowerCase() === 'weekly') {\n      post.subtitle = new Date().getFullYear() + '-' + new Date().getWeek(1);\n    }\n  }\n  const [categoryValue, categoryOnChange] = useState(post.category);\n  const category = {\n    value: categoryValue,\n    onChange: (event) => {\n      categoryOnChange(event.target.value);\n    },\n  };\n  const title = useFormInput('title', post);\n  const subtitle = useFormInput('subtitle', post);\n  const markdown = useFormInput('markdown', post);\n\n  useEffect(() => {\n    if (data && data.post) {\n      setEditorMode('edit');\n    } else {\n      setEditorMode('new');\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    console.log('Editor');\n    const beforeunloadHandler = (e) => {\n      const message =\n        'You will losse all your changes. Are you sure you want to leave?';\n      (e || window.event).returnValue = message;\n      return message;\n    };\n    window.addEventListener('beforeunload', beforeunloadHandler);\n    return () => {\n      window.removeEventListener('beforeunload', beforeunloadHandler);\n    };\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newPost = {\n      timestamp: post.timestamp,\n      title: title.value,\n      subtitle: subtitle.value,\n      category: category.value,\n      markdown: markdown.value,\n    };\n    if (editorMode === 'edit' && newPost.category !== data.post.category) {\n      alert(\"We can't move posts yet\");\n      setMode('view');\n      return;\n    }\n    console.log(newPost);\n\n    let savePromise;\n    if (editorMode === 'new') savePromise = postPost;\n    else if (editorMode === 'edit') savePromise = patchPost;\n    else throw new Error('Unexpected editorMode' + editorMode);\n\n    savePromise(newPost).then(() => {\n      setMode('view');\n    });\n  }\n\n  return (\n    <div className=\"border-t-4 border-blue-600 lg:border-t-8\">\n      <div className=\"max-w-5xl m-auto xl:my-10\">\n        <form className=\"px-8 pt-6 pb-8 mb-4 xl/\" onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block text-blue-600 text-sm font-bold mb-2\">\n              Category\n            </label>\n            <div className=\"inline-block relative w-full\">\n              <select\n                {...category}\n                className=\"block capitalize appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight\"\n              >\n                {categories.map((category, i) => {\n                  return (\n                    <option key={i} className=\"capitalize\" value={category.id}>\n                      {category.description}\n                    </option>\n                  );\n                })}\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-blue-600 text-sm font-bold mb-2\">\n              {title.placeholder}\n            </label>\n            <input\n              className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight\"\n              {...title}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-blue-600 text-sm font-bold mb-2\">\n              {subtitle.placeholder}\n            </label>\n            <input\n              className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight\"\n              type=\"text\"\n              {...subtitle}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-blue-600 text-sm font-bold mb-2\">\n              {markdown.placeholder}\n            </label>\n            <textarea\n              {...markdown}\n              className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight h-64\"\n            ></textarea>\n          </div>\n          <div className=\"flex justify-center\">\n            <button\n              className=\"font-medium py-2 px-4 appearance-none rounded block border mr-5 text-white bg-blue-600\"\n              type=\"submit\"\n            >\n              Save\n            </button>\n            <button\n              className=\"font-medium py-1 px-2 appearance-none rounded block border bg-grayext-ddd\"\n              type=\"button\"\n              onClick={() => setMode('view')}\n            >\n              cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction useFormInput(key, entry) {\n  const [value, setValue] = useState(entry[key] || '');\n\n  function onChange(e) {\n    setValue(e.target.value);\n  }\n\n  return {\n    value,\n    onChange,\n    placeholder: key.capitalize(),\n  };\n}\n\nexport default Editor;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ModeContext from './Mode.model';\n\nfunction Setup() {\n  const { setMode } = useContext(ModeContext);\n  const entries = {\n    awsAccessKey: useFormInputLocalstorage('awsAccessKey'),\n    awsSecretAccess: useFormInputLocalstorage('awsSecretAccess'),\n  };\n\n  const fields = Object.values(entries);\n\n  useEffect(() => {\n    console.log('Setup load');\n    if (isComplete()) complete();\n    // eslint-disable-next-line\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (isComplete()) {\n      complete();\n    }\n    console.log('Missing a entry');\n  }\n\n  function isComplete() {\n    return fields\n      .filter((field) => field.allowEmpty !== true)\n      .every((field) => {\n        const res = localStorage.getItem(field.key);\n        console.log(field.key, res);\n        return res;\n      });\n  }\n\n  async function complete() {\n    window.AWS.config.update({\n      region: 'eu-west-1',\n      credentials: new window.AWS.Credentials(\n        entries.awsAccessKey.value,\n        entries.awsSecretAccess.value\n      ),\n    });\n\n    window.dynamoDB = {\n      documentClient: new window.AWS.DynamoDB.DocumentClient({\n        endpoint: process.env.REACT_APP_DYNAMODB_ENDPOINT,\n        maxRetries: 5,\n      }),\n    };\n\n    if (process.env.REACT_APP_FEATURE_GOOGLE_PHOTOS === 'enabled') {\n      await loadGoogleAPI();\n    }\n    setMode('view');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {fields.map((field, i) => {\n        return (\n          <label key={i}>\n            {field.name}:\n            <input value={field.value} onChange={field.onChange} />\n          </label>\n        );\n      })}\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nfunction useFormInputLocalstorage(key, options = {}) {\n  const [value, setValue] = useState(\n    localStorage.getItem(key) || options.def || ''\n  );\n\n  if (options.def && !localStorage.getItem(key)) {\n    localStorage.setItem(key, options.def);\n  }\n\n  function onChange(e) {\n    const newValue = e.target.value;\n    setValue(newValue);\n    localStorage.setItem(key, newValue);\n  }\n\n  return {\n    name: key,\n    key,\n    value,\n    onChange,\n    allowEmpty: options.allowEmpty,\n  };\n}\n\nfunction loadGoogleAPI() {\n  return new Promise((resolve, reject) => {\n    window.gapi.load('client', () => {\n      window.gapi.client\n        .init({\n          apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/photoslibrary.readonly',\n        })\n        .then(\n          () => {\n            window.GoogleAuth = window.gapi.auth2.getAuthInstance();\n            if (!window.GoogleAuth.isSignedIn.get()) {\n              window.GoogleAuth.signIn();\n            }\n            resolve();\n          },\n          (error) => {\n            alert(JSON.stringify(error, null, 2));\n            reject(error);\n          }\n        );\n    });\n  });\n}\n\nexport default Setup;\n","import React, { useContext } from 'react';\nimport Header from './Header';\nimport Posts from './Posts';\nimport Editor from './Editor';\nimport Setup from './Setup';\nimport ModeContext, { useMode } from './Mode.model';\nimport CategoriesContext, { useCategories } from './Categories.model';\nimport PostsContext, { usePosts } from './Posts.model';\n\nimport './tailwind.output.css';\n\nfunction AppContext(props) {\n  const categoriesContextValue = useCategories();\n  const postsContextValue = usePosts(categoriesContextValue);\n  return (\n    <CategoriesContext.Provider value={categoriesContextValue}>\n      <PostsContext.Provider value={postsContextValue}>\n        {props.children}\n      </PostsContext.Provider>\n    </CategoriesContext.Provider>\n  );\n}\n\nfunction Viewport() {\n  const { mode } = useContext(ModeContext);\n  if (mode === 'setup') return <Setup />;\n  if (mode === 'view')\n    return (\n      <AppContext>\n        <Header />\n        <Posts />\n      </AppContext>\n    );\n  if (mode === 'edit')\n    return (\n      <AppContext>\n        <Editor />\n      </AppContext>\n    );\n}\n\nfunction DevelopmentIndicator() {\n  if (process.env.NODE_ENV === 'development') {\n    return <div className=\"bg-green-400 h-3\"></div>;\n  }\n  return null;\n}\n\nfunction App() {\n  const modeContextValue = useMode();\n\n  return (\n    <ModeContext.Provider value={modeContextValue}>\n      <DevelopmentIndicator />\n      <Viewport />\n    </ModeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}